var searchIndex = new Map(JSON.parse('[\
["dynamixel_driver",{"doc":"Dynamixel Driver","t":"PPFGPPPPPPFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ChecksumError","DecodingError","DynamixelDriver","DynamixelDriverError","FailedOpeningSerialPort","HeaderLenTooSmall","IdMismatchError","IoError","ReadingError","StatusError","SyncCommand","SyncCommandFloat","Timeout","TokioSerialError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_io_buffers","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","id","into","into","into","into","is_recoverable","new","new","new","ping","read_max_torque","read_position","read_position_degrees","read_position_rad","read_temperature","read_voltage","search_all","source","sync_write_compliance_margin_both","sync_write_compliance_slope_both","sync_write_moving_speed","sync_write_position","sync_write_position_degrees","sync_write_position_rad","sync_write_torque","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","value","with_baud_rate","write_compliance_margin_both","write_compliance_slope_both","write_id","write_position","write_position_degrees","write_position_rad","write_torque"],"q":[[0,"dynamixel_driver"],[93,"core::result"],[94,"core::fmt"],[95,"core::fmt"],[96,"serialport"],[97,"alloc::vec"],[98,"core::error"],[99,"core::option"],[100,"core::convert"],[101,"alloc::string"],[102,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,3,0,0,3,3,3,3,3,3,0,0,3,3,1,3,5,6,1,3,5,6,1,5,6,5,6,5,6,3,3,5,6,1,3,3,3,5,5,5,6,6,5,6,1,3,5,6,3,1,5,6,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,5,6,3,1,3,5,6,1,3,5,6,1,3,5,6,5,6,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[2,3]]]],[5,5],[6,6],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[5,5],7],[[6,6],7],[[3,8],9],[[3,8],9],[[5,8],9],[[6,8],9],[-1,-1,[]],[10,3],[-1,-1,[]],[11,3],[[[2,[12,13]]],5],[[[2,[12,7]]],5],[-1,-1,[]],[[[2,[12,14]]],6],[-1,-1,[]],[5,12],[6,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,7],[15,[[4,[1,3]]]],[[12,13],5],[[12,14],6],[[1,12],[[4,[2,3]]]],[[1,12],[[4,[14,3]]]],[[1,12],[[4,[16,3]]]],[[1,12],[[4,[14,3]]]],[[1,12],[[4,[14,3]]]],[[1,12],[[4,[12,3]]]],[[1,12],[[4,[14,3]]]],[1,[[4,[[17,[12]],3]]]],[3,[[19,[18]]]],[[1,[17,[-1]]],[[4,[2,3]]],[[20,[5]]]],[[1,[17,[-1]]],[[4,[2,3]]],[[20,[5]]]],[[1,[17,[-1]]],[[4,[2,3]]],[[20,[5]]]],[[1,[17,[-1]]],[[4,[2,3]]],[[20,[5]]]],[[1,[17,[6]]],[[4,[2,3]]]],[[1,[17,[6]]],[[4,[2,3]]]],[[1,[17,[-1]]],[[4,[2,3]]],[[20,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,21,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[5,13],[6,14],[[15,13],[[4,[1,3]]]],[[1,12,12],[[4,[2,3]]]],[[1,12,12],[[4,[2,3]]]],[[1,12,12],[[4,[2,3]]]],[[1,12,16],[[4,[2,3]]]],[[1,12,14],[[4,[2,3]]]],[[1,12,14],[[4,[2,3]]]],[[1,12,7],[[4,[2,3]]]]],"c":[],"p":[[5,"DynamixelDriver",0],[1,"tuple"],[6,"DynamixelDriverError",0],[6,"Result",93],[5,"SyncCommand",0],[5,"SyncCommandFloat",0],[1,"bool"],[5,"Formatter",94],[8,"Result",94],[5,"Error",95],[5,"Error",96],[1,"u8"],[1,"u32"],[1,"f32"],[1,"str"],[1,"u16"],[5,"Vec",97],[10,"Error",98],[6,"Option",99],[10,"Into",100],[5,"String",101],[5,"TypeId",102]],"b":[[29,"impl-Display-for-DynamixelDriverError"],[30,"impl-Debug-for-DynamixelDriverError"],[34,"impl-From%3CError%3E-for-DynamixelDriverError"],[36,"impl-From%3CError%3E-for-DynamixelDriverError"],[37,"impl-From%3C(u8,+u32)%3E-for-SyncCommand"],[38,"impl-From%3C(u8,+bool)%3E-for-SyncCommand"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
